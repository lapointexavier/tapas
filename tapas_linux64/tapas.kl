struct Tapas
{
    String name;
    Float32 price;
    SInt8 quantity;
};


function Tapas(String name, Float32 price)
{
    report("Initializing Tapas [Proto 1]");
    this.name = name;
    this.price = price;
    this.quantity = 1;   // Alright ... let's start with one.
}


function Tapas(String name, Float32 price, SInt8 quantity)
{
    report("Initializing Tapas  [Proto 2]");
    this.name = name;
    this.price = price;
    if(quantity > 0)
        this.quantity = quantity;
    else
        this.quantity = 1;
}


function ~Tapas(){}


struct DateTime
{
    SInt16 year;
    SInt16 month;
    SInt16 day;
    SInt16 hour;
    SInt16 minute;
    SInt16 second;   // Better be on time moffos!
    SInt16 millisecond;   // Srsly?!
    String repr;
};


function DateTime(SInt16 year, SInt16 month, SInt16 day)
{
    report("Setting Meeting time");

    this.year = year;
    this.month = month;
    this.day = day;
}


function DateTime(SInt16 year, SInt16 month, SInt16 day, SInt16 hour, SInt16 minute, SInt16 second, SInt16 millisecond)
{
    report("Setting Meeting time");

    this.year = year;
    this.month = month;
    this.day = day;
    this.hour = hour;
    this.minute = minute;
    this.second = second;
    this.millisecond = millisecond;
    this.repr = \
          this.month + "/" \
        + this.day + "/"   \
        + this.year + " @ "  \
        + this.hour + ":"    \
        + this.minute + ":"  \
        + this.second;
}


function ~DateTime(){}


struct MontrealSiTdsMeeting
{
    DateTime datetime;
    String restaurant;
    Tapas menu[];
};


function MontrealSiTdsMeeting(DateTime when, String restaurant, Tapas menu[])
{
    report("Creating MontrealSiTdsMeeting!");

    this.menu = menu;
    this.datetime = when;
    this.restaurant = restaurant;
}


function ~MontrealSiTdsMeeting()
{
    report("That was gooooodd. Time to go home.");
}


function Boolean MontrealSiTdsMeeting.gotTapas()
{
    if(this.menu.size > 0)
        return true;
    return false;
}


function Boolean MontrealSiTdsMeeting.available()
{
    if(this.datetime.year && this.datetime.month && this.datetime.day)
        return true;
    return false;
}


function Boolean MontrealSiTdsMeeting.imIn()
{
    if(this.available() && this.gotTapas())
        return true;
    return false;
}

struct PriceQuantity
{
    Float32 price;
    Integer quantity;
};


function PriceQuantity(Float32 price)
{
    this.price = price;
    this.quantity = 1;
}


function PriceQuantity(Float32 price, Integer quantity)
{
    this.price = price;
    if(quantity > 0)
        this.quantity = quantity;
    else
        this.quantity = 1;
}


function ~PriceQuantity(){}


function Tapas[] buildMenu(PriceQuantity menuItems[String])
{
    Tapas menu[];
    for(item in menuItems)
        menu.push(Tapas(item, menuItems[item].price, menuItems[item].quantity));

    return menu;
}


operator entry() {
    DateTime when(2012, 9, 14, 19, 33, 22, 977);
    report(when.repr);

    PriceQuantity menuItems[String];
    menuItems["paella valenciana"] = PriceQuantity(8.42, 2);
    menuItems["tortilla de patatas"] = PriceQuantity(6.78, 2);
    menuItems["pulpo"] = PriceQuantity(3.45, 3);

    report("Menu Initialized ...");

    MontrealSiTdsMeeting meeting(when, "Club Espagnol du Quebec", buildMenu(menuItems));

    report("Meeting Initialized .... who's in?");

    if(meeting.imIn() == true)
        report("Yayyy!");
}
